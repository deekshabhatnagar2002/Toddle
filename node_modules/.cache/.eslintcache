[{"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\index.js":"1","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\reportWebVitals.js":"2","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\App.js":"3","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\store.js":"4","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Navbar.js":"5","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Board.js":"6","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Home.js":"7","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\EditPost.js":"8","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Search.js":"9","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\index.js":"10","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\index.js":"11","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Post.js":"12","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\BoardItem.js":"13","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\tooglePop.js":"14","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\boardReducer.js":"15","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\boardIdReducer.js":"16","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\postIdReducer.js":"17","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\postReducer.js":"18","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\action-creators\\index.js":"19"},{"size":662,"mtime":1686995718000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1686994418000,"results":"22","hashOfConfig":"21"},{"size":722,"mtime":1687064836000,"results":"23","hashOfConfig":"21"},{"size":193,"mtime":1686989504000,"results":"24","hashOfConfig":"21"},{"size":1000,"mtime":1687065494000,"results":"25","hashOfConfig":"21"},{"size":5846,"mtime":1687070156000,"results":"26","hashOfConfig":"21"},{"size":3703,"mtime":1687066818000,"results":"27","hashOfConfig":"21"},{"size":3274,"mtime":1687069408000,"results":"28","hashOfConfig":"21"},{"size":3952,"mtime":1687066870000,"results":"29","hashOfConfig":"21"},{"size":455,"mtime":1687040522000,"results":"30","hashOfConfig":"21"},{"size":57,"mtime":1686989662000,"results":"31","hashOfConfig":"21"},{"size":1708,"mtime":1687066838000,"results":"32","hashOfConfig":"21"},{"size":445,"mtime":1687030584000,"results":"33","hashOfConfig":"21"},{"size":265,"mtime":1687026452000,"results":"34","hashOfConfig":"21"},{"size":333,"mtime":1687067966000,"results":"35","hashOfConfig":"21"},{"size":159,"mtime":1687030130000,"results":"36","hashOfConfig":"21"},{"size":204,"mtime":1687058910000,"results":"37","hashOfConfig":"21"},{"size":1114,"mtime":1687069268000,"results":"38","hashOfConfig":"21"},{"size":1229,"mtime":1687063032000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pckmqh",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\index.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\reportWebVitals.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\App.js",["106"],[],"import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport { BrowserRouter as Router,Routes,Route } from 'react-router-dom';\nimport Board from './components/Board';\nimport EditPost from './components/EditPost';\nimport Search from './components/Search';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Routes>\n        <Route path='' element={<Home/>}/>\n        <Route path='board/:id' element={<Board/>}/>\n        <Route path='editpost/:id' element={<EditPost/>}/>\n        <Route path='search/:id' element={<Search/>}/>\n        </Routes>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\store.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Navbar.js",["107"],[],"import React from 'react'\r\nimport \"../assets/css/Navbar.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nexport default function Navbar() {\r\n    \r\n    const [search ,setSearch]=useState();\r\n    const dispatch=useDispatch();\r\n    const {tooglePop}=bindActionCreators(actionCreators,dispatch);\r\n  return (   \r\n    <div className=\"navbar\">\r\n    <div className=\"logo\">\r\n      <Link to=\"\">\r\n        <img src={require('../assets/img/logo.jpeg')} alt=\"Logo\"/>\r\n        </Link>\r\n    </div>\r\n    <form   action={`/search/${search}`}>\r\n    <input type=\"search\" className=\"search-bar\" placeholder=\"Search\" \r\n\r\n    onChange={(e)=>{setSearch(e.target.value)}}\r\n    />\r\n    </form>\r\n    <button className=\"create-button\"\r\n    onClick={(e)=>{tooglePop(1)}}\r\n    >+ Create Board</button>\r\n  </div>\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Board.js",["108","109","110","111","112"],[],"import React from 'react'\r\nimport Post from \"./Post\"\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\nimport \"../assets/css/board.css\"\r\nimport { Link } from 'react-router-dom';\r\nimport Dropzone from 'react-dropzone'\r\n\r\n\r\n\r\nexport default function Board() {\r\n\r\n    const bId= window.location.pathname.substring(7);\r\n    \r\n    const post=useSelector(state=> state.post)\r\n    const board=useSelector(state=> state.board)\r\n    const postId=useSelector(state=> state.postId)\r\n\r\n\r\n\r\n    const dispatch=useDispatch();\r\n    const {addPost}=bindActionCreators(actionCreators,dispatch);\r\n    const {addpostid}=bindActionCreators(actionCreators,dispatch);\r\n\r\n    const[postTitle,setPostTitle]=useState(\"\")\r\n    const[postDesc,setPostDesc]=useState(\"\")\r\n    const[image,setImage]=useState(null)\r\n    const[toogle,setToogle]=useState(0)\r\n\r\n    \r\n\r\n    const savePost=()=>{\r\n        addPost({\r\n            Id:Number(bId),\r\n            postTitle:postTitle,\r\n            postDesc:postDesc,\r\n            image:image,\r\n            postId:postId,\r\n            like:0,\r\n            \r\n            \r\n        })  \r\n        addpostid();\r\n        setToogle(0); \r\n    }\r\n\r\n\r\n\r\n\r\n    const mypost = [];\r\n    post.forEach((item) =>{\r\n        \r\n        if(item.Id.toString()==bId)\r\n        {\r\n            mypost.push(item);\r\n        }\r\n    });\r\n\r\n    \r\n    const onImageChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n          setImage(URL.createObjectURL(event.target.files[0]));\r\n        }\r\n       }\r\n       const onDrop = (acceptedFiles) => {\r\n        if (acceptedFiles && acceptedFiles[0])  {\r\n          setImage(URL.createObjectURL(acceptedFiles[0]));\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n  return (\r\n\r\n    < div \r\n    style={{position:\"absolute\" ,top:\"0px\" ,width:\"100%\",\r\n\r\n\r\n}}\r\n    >\r\n        <div class=\"navbar\"\r\n        style={{\r\n            height:\"46px\",\r\n            backgroundColor:\"white\",\r\n            border:\"none\",\r\n            boxShadow:\"0px 4px  40px rgb(0 0 0/0.2)\"\r\n            \r\n            \r\n\r\n        \r\n        \r\n        }}\r\n        >\r\n      <div class=\"back-button\">\r\n        <i class=\"fas fa-arrow-left\"></i>\r\n      </div>\r\n      <Link  to=\"/\" class=\"logo hf-cn\">\r\n        <img src={require(\"../assets/img/smlogo.jpeg\")} alt=\"Logo\"/>\r\n        <span class=\"logo-text\">toddle</span>\r\n      </Link>\r\n      <i class=\"fas fa-search navbar-icon search-icon\"></i>\r\n      <div class=\"divider\"></div>\r\n      <i class=\"far fa-bookmark navbar-icon bookmark-icon\"></i>\r\n    </div>\r\n    \r\n    <div class=\"content\"\r\n    style={{display:mypost.length==0?\"block\":\"none\"}}\r\n    \r\n    >\r\n      <h2 class=\"heading\">Your Posts</h2>\r\n      <div class=\"create-button-container\">\r\n        <button class=\"create-button\">\r\n          <i class=\"fas fa-plus plus-icon\"></i>\r\n          Create New Post\r\n        </button>\r\n      </div>\r\n      <div class=\"add-something-icon\">\r\n      <img src={require(\"../assets/img/noPost.jpeg\")}/> \r\n      </div>\r\n      <p class=\"no-posts-text\">Nothing here yet. Create your first post by clicking the + button above.</p>\r\n    </div>\r\n\r\n\r\n<div className='ps-cn'\r\n    style={{display:mypost.length==0?\"none\":\"flex\"}}>\r\n      {mypost.map((element,id) => {\r\n                return (\r\n                     \r\n   <Post data={element} i={id} key={id}/>       \r\n                        );\r\n                    })}\r\n\r\n                    \r\n\r\n</div>\r\n<button\r\nclassName='cr-btn'\r\nonClick={(e)=>{setToogle(1)}}\r\n\r\n\r\n> + Create New Post </button>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"hm-cr\"\r\n        style={{display:toogle===1?\"flex\":\"none\",    }}\r\n        >\r\n\r\n            <div className=\"hm-pp\"\r\n            style={{height:\"500px\"}}\r\n            >\r\n        <br />\r\n            <div className='hm-w90 pp-hd'>\r\n                    <div  className='hm-f1'>\r\n                        Create a Post\r\n                    </div>\r\n                    <button \r\n                    onClick={(e)=>{setToogle(0)}}\r\n                      className='hm-bt-cl'>\r\n\r\n                        X\r\n                    </button>\r\n            </div>\r\n            <div className=\"hm-w90\">\r\n                Write something for your post\r\n            </div>\r\n            <br />\r\n            <div className=\"hm-w90\">\r\n                Subject\r\n            </div>\r\n            \r\n            \r\n            <br />  \r\n            <input type=\"text\" \r\n            onChange={(e)=>{setPostTitle(e.target.value)}}\r\n            placeholder='Enter title for your post'\r\n            className='hm-w90 hm-pd-1'\r\n            />\r\n            <br />\r\n            <div className=\"hm-w90\">\r\n\r\n\r\n\r\n\r\n\r\n            <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} \r\n                onChange={onImageChange}\r\n              />\r\n              Drag and Drop to Upload \r\n          </div>\r\n\r\n          )}\r\n        </Dropzone>\r\n\r\n\r\n        </div>\r\n        <div className=\"hm-w90\">\r\n\r\n\r\n<br />\r\n<input type=\"file\" \r\n  onChange={onImageChange}\r\n  />\r\n\r\n\r\n\r\n\r\n\r\n\r\n              \r\n   \r\n            </div>\r\n            <div className=\"hm-w90\">\r\n                <br /><br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n            </div>\r\n            <div className=\"hm-w90\">\r\n            What's   on your mind? \r\n            </div>\r\n            <br />\r\n                <input type=\"text \" className='hm-w90 hm-pd-1' \r\n                   onChange={(e)=>{setPostDesc(e.target.value)}}\r\n                />\r\n\r\n\r\n    <button \r\n    onClickCapture={savePost}\r\n     className='hm-bt-sv'>Save</button>\r\n    \r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Home.js",["113"],[],"import React from 'react'\r\nimport '../assets/css/Home.css'\r\nimport Board from './BoardItem'\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n    const board=useSelector(state=> state.board)\r\n    const boardId=useSelector(state=> state.boardId)\r\n    const popState=useSelector(state=> state.popState)\r\n\r\n        \r\n    const [boardName, setBoardName]=useState(\"\")\r\n    const [boardColor, setBoardColor]=useState(\"#FFCC66\")   \r\n    const colors=[\"#FFCC66\",\"#FFAEC0\",\"#C5C5FC\",\"#A7F0F9\"]\r\n    \r\n\r\n    const dispatch=useDispatch();\r\n    const {tooglePop}=bindActionCreators(actionCreators,dispatch);\r\n    const {addboard}=bindActionCreators(actionCreators,dispatch);\r\n    const {addid}=bindActionCreators(actionCreators,dispatch);\r\n\r\n\r\n\r\n\r\n\r\n    const {}=bindActionCreators(actionCreators,dispatch);\r\n    const saveBoard=()=>{\r\n        addboard({boardName\r\n            ,boardColor,\r\n             \"id\":boardId,\r\n            \r\n        })\r\n        tooglePop()\r\n        addid();\r\n    }\r\n    \r\n  return (\r\n      <div className=\"page\">\r\n        <br />\r\n    <h1>My Boards</h1>\r\n        <br />\r\n        <div className=\"hm-bx\">\r\n        <div className='hm-mb'>\r\n    {board.map((element,id) => {\r\n                return (\r\n                     \r\n   <Board data={element} i={id} key={id}/>\r\n                        );\r\n                    })}\r\n</div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n        <div className=\"hm-cr\"\r\n        style={{display:popState===1?\"flex\":\"none\"}}\r\n        >\r\n\r\n            <div className=\"hm-pp\">\r\n        <br />\r\n            <div className='hm-w90 pp-hd'>\r\n                    <div  className='hm-f1'>\r\n                        Add a name for your board\r\n                    </div>\r\n                    <button onClick={tooglePop}  className='hm-bt-cl'>\r\n                        X\r\n                    </button>\r\n            </div>\r\n            <br />\r\n            <input type=\"text\" onChange={(e)=>{setBoardName(e.target.value)}}\r\n            placeholder='Places around the world'\r\n            className='hm-w90 hm-pd-1'\r\n            />\r\n            <br />\r\n            <div className='hm-w90 hm-f1'\r\n            >Select post colour</div>\r\n\r\n            <div\r\n            className='hm-w90 hm-f2'\r\n            >Here are some templates to help you get started</div>\r\n\r\n\r\n    <div className='hm-sl hm-w90 hm-cls'>\r\n        <div\r\n        style={{\r\n        border:boardColor===colors[0]?\"2px solid black\":\"none\",\r\n        background:colors[0]\r\n        }}\r\n        onClick={(e)=>{setBoardColor(colors[0])}}\r\n        className='hm-cir'\r\n        >  </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[1]?\"2px solid black\":\"none\",\r\n            background:colors[1]        \r\n        }}\r\n        className='hm-cir'\r\n        onClick={(e)=>{setBoardColor(colors[1])}}\r\n        > </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[2]?\"2px solid black\":\"none\",\r\n            background:colors[2]\r\n                }}\r\n        className='hm-cir'  \r\n        onClick={(e)=>{setBoardColor(colors[2])}}\r\n        > </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[3]?\"2px solid black\":\"none\",\r\n            background:colors[3]\r\n                }}\r\n        className='hm-cir'  \r\n        onClick={(e)=>{setBoardColor(colors[3])}}\r\n        > </div>\r\n\r\n\r\n\r\n    </div>\r\n    <br /><br /><br />\r\n    <button onClickCapture={saveBoard} className='hm-bt-sv'>Create Board</button>\r\n    \r\n            </div>\r\n            \r\n        </div>\r\n</div>\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\EditPost.js",["114","115"],[],"import React from 'react'\r\nimport '../assets/css/EditPost.css'\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';import Dropzone from 'react-dropzone'\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function EditPost() {\r\n\r\n  const dispatch=useDispatch();\r\n  const {editPost}=bindActionCreators(actionCreators,dispatch);\r\n  const post=useSelector(state=> state.post)\r\n\r\nconst postId=window.location.pathname.substring(10);\r\n\r\n  const[postTitle,setPostTitle]=useState(\"\")\r\n  const[image,setImage]=useState(null)\r\n  const[postDesc,setPostDesc]=useState(\"\")\r\n\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setImage(URL.createObjectURL(event.target.files[0]));\r\n      console.log(\"last h\")\r\n    }\r\n\r\n   }\r\n\r\n\r\n       const onDrop = (acceptedFiles) => {\r\n        if (acceptedFiles && acceptedFiles[0])  {\r\n          setImage(URL.createObjectURL(acceptedFiles[0]));\r\n          \r\n        }\r\n\r\n      }\r\n\r\n\r\n  const savePost=(e)=>\r\n  {\r\n    console.log(image)\r\n    editPost({\r\n      postTitle:postTitle,\r\n      postDesc:postDesc,\r\n      image:image,\r\n      postId:postId,    \r\n  })  \r\n\r\n\r\n  }\r\n  return (\r\n    <div className=\"ed-cr\"\r\n        >\r\n\r\n            <div className=\"hm-pp\"\r\n            style={{height:\"500px\",border:\"1px solid black\"}}\r\n            >\r\n        <br />\r\n            <div className='hm-w90 pp-hd'>\r\n                    <div  className='hm-f1'>\r\n                        Edit your Post\r\n                    </div>\r\n   \r\n            </div>\r\n            <div className=\"hm-w90\">\r\n                Write something for your post\r\n            </div>\r\n            <br />\r\n            <div className=\"hm-w90\">\r\n                Subject\r\n            </div>\r\n            \r\n            \r\n            <br />  \r\n            <input type=\"text\" \r\n            onChange={(e)=>{setPostTitle(e.target.value)}}\r\n            placeholder='Enter title for your post'\r\n            className='hm-w90 hm-pd-1'\r\n            />\r\n            <br />\r\n            <div className=\"hm-w90\">\r\n                <input type=\"file\" \r\n                onChange={onImageChange}\r\n                />\r\n\r\n                            <Dropzone onDrop={onDrop}>\r\n          {({getRootProps, getInputProps}) => (\r\n            <div {...getRootProps()}>\r\n\r\n              <input  {...getInputProps()}\r\n                onChange={onImageChange}\r\n                />\r\n              Drag and Drop to Upload \r\n            </div>\r\n          )}\r\n        </Dropzone>\r\n        <br />\r\n\r\n \r\n            </div>\r\n            <div className=\"hm-w90\">\r\n                <br /><br />\r\n                <hr />\r\n                <br />\r\n                <br />\r\n            </div>\r\n            <div className=\"hm-w90\">\r\n            What's   on your mind? \r\n            </div>\r\n            <br />\r\n                <input type=\"text \" className='hm-w90 hm-pd-1' \r\n                 \r\n                />\r\n\r\n\r\n\r\n<Link to={\"/\"}>\r\n    <button \r\n     className='hm-bt-sv'\r\n     onClick={(e)=>{savePost(e)}}\r\n     >Save</button>\r\n     </Link>\r\n    \r\n            </div>\r\n            \r\n        </div>\r\n\r\n\r\n\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Search.js",["116","117","118"],[],"import React from 'react'\r\nimport '../assets/css/Home.css'\r\nimport Board from './BoardItem'\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\n\r\nexport default function Home() {\r\n    const myBoard=useSelector(state=> state.board)\r\n    const boardId=useSelector(state=> state.boardId)\r\n    const popState=useSelector(state=> state.popState)\r\n    const searchId=window.location.pathname.substring(8);\r\n    const [board,setBoard]=useState([]);\r\n    myBoard.forEach((item) =>{\r\n        \r\n        if(item.boardName==searchId)\r\n        {\r\n            board.push(item);\r\n        }\r\n    });\r\n\r\n\r\n\r\n        \r\n    const [boardName, setBoardName]=useState(\"\")\r\n    const [boardColor, setBoardColor]=useState(\"#FFCC66\")   \r\n    const colors=[\"#FFCC66\",\"#FFAEC0\",\"#C5C5FC\",\"#A7F0F9\"]\r\n    \r\n\r\n    const dispatch=useDispatch();\r\n    const {tooglePop}=bindActionCreators(actionCreators,dispatch);\r\n    const {addboard}=bindActionCreators(actionCreators,dispatch);\r\n    const {addid}=bindActionCreators(actionCreators,dispatch);\r\n\r\n\r\n\r\n\r\n\r\n    const {}=bindActionCreators(actionCreators,dispatch);\r\n    const saveBoard=()=>{\r\n        addboard({boardName\r\n            ,boardColor,\r\n             \"id\":boardId,\r\n            \r\n        })\r\n        tooglePop()\r\n        addid();\r\n    }\r\n    \r\n  return (\r\n      <div className=\"page\">\r\n        <br />\r\n    <h1>My Boards</h1>\r\n        <br />\r\n        <div className=\"hm-bx\">\r\n        <div className='hm-mb'>\r\n    {board.map((element,id) => {\r\n                return (\r\n                     \r\n   <Board data={element} i={id} key={id}/>\r\n                        );\r\n                    })}\r\n</div>\r\n\r\n\r\n    </div>\r\n\r\n\r\n        <div className=\"hm-cr\"\r\n        style={{display:popState===1?\"flex\":\"none\"}}\r\n        >\r\n\r\n            <div className=\"hm-pp\">\r\n        <br />\r\n            <div className='hm-w90 pp-hd'>\r\n                    <div  className='hm-f1'>\r\n                        Add a name for your board\r\n                    </div>\r\n                    <button onClick={tooglePop}  className='hm-bt-cl'>\r\n                        X\r\n                    </button>\r\n            </div>\r\n            <br />\r\n            <input type=\"text\" onChange={(e)=>{setBoardName(e.target.value)}}\r\n            placeholder='Places around the world'\r\n            className='hm-w90 hm-pd-1'\r\n            />\r\n            <br />\r\n            <div className='hm-w90 hm-f1'\r\n            >Select post colour</div>\r\n\r\n            <div\r\n            className='hm-w90 hm-f2'\r\n            >Here are some templates to help you get started</div>\r\n\r\n\r\n    <div className='hm-sl hm-w90 hm-cls'>\r\n        <div\r\n        style={{\r\n        border:boardColor===colors[0]?\"2px solid black\":\"none\",\r\n        background:colors[0]\r\n        }}\r\n        onClick={(e)=>{setBoardColor(colors[0])}}\r\n        className='hm-cir'\r\n        >  </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[1]?\"2px solid black\":\"none\",\r\n            background:colors[1]        \r\n        }}\r\n        className='hm-cir'\r\n        onClick={(e)=>{setBoardColor(colors[1])}}\r\n        > </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[2]?\"2px solid black\":\"none\",\r\n            background:colors[2]\r\n                }}\r\n        className='hm-cir'  \r\n        onClick={(e)=>{setBoardColor(colors[2])}}\r\n        > </div>\r\n        <div\r\n        style={{\r\n            border:boardColor===colors[3]?\"2px solid black\":\"none\",\r\n            background:colors[3]\r\n                }}\r\n        className='hm-cir'  \r\n        onClick={(e)=>{setBoardColor(colors[3])}}\r\n        > </div>\r\n\r\n\r\n\r\n    </div>\r\n    <br /><br /><br />\r\n    <button onClickCapture={saveBoard} className='hm-bt-sv'>Create Board</button>\r\n    \r\n            </div>\r\n            \r\n        </div>\r\n</div>\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\index.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\index.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\Post.js",["119","120","121","122"],[],"import React from 'react'\r\nimport \"../assets/css/post.css\"\r\nimport { useSelector } from 'react-redux'\r\nimport {actionCreators} from '../state/index'\r\nimport { bindActionCreators } from 'redux';\r\nimport { useDispatch } from 'react-redux'\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Post(props) {\r\n  const dispatch=useDispatch();\r\n  const {addLike}=bindActionCreators(actionCreators,dispatch);\r\n  const {delPost}=bindActionCreators(actionCreators,dispatch);\r\n  const {editPost}=bindActionCreators(actionCreators,dispatch);\r\n  const [likeState,setLikeState]=useState(props.data.liked);\r\n\r\n\r\n  return (  \r\n    <div class=\"card\">\r\n    <div class=\"card-header\">\r\n      <h2 class=\"card-title\">\r\n        {props.data.postTitle}\r\n      </h2>\r\n        <div class=\"options-menu\">\r\n        </div>\r\n    </div>\r\n    <img src={props.data.image} alt=\"Card Image\" class=\"card-image\"/>\r\n    <div class=\"card-content\">\r\n\r\n <p>{props.data.postDesc  }</p>\r\n    <hr />\r\n    <div\r\n    style={{display:\"flex\",padding:\"10px 9px\",alignItems:\"center\"}}\r\n    >            <i class=\"fa fa-heart\"  style={{\r\n\r\n      color:props.data.liked==0?\"red\":\"black\",\r\n      cursor:\"pointer\"\r\n      }} onClick={(e)=>{addLike(props.data.Id);\r\n      setLikeState(!likeState)}}></i>\r\n            <button onClick={(e)=>{delPost(props.data.postId)}}\r\n\r\n            className='dl-btn-2'\r\n            >\r\n              \r\n              Delete</button>\r\n              <Link to={`/editpost/${props.data.postId}`}>\r\n            <button \r\n\r\n            className='ed-btn-2'\r\n\r\n            >\r\n              \r\n              Edit</button>\r\n              </Link>\r\n\r\n</div>\r\n    </div>\r\n   </div>\r\n  )\r\n}\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\components\\BoardItem.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\tooglePop.js",["123"],[],"const reducer =(state=0,action)=>{\r\n\r\n    if(action.type===\"toog\")\r\n    {\r\n    if(state==1)\r\n    {\r\n        return state-1;\r\n    }\r\n    else\r\n    {\r\n        return state+1;\r\n    }}\r\n    else\r\n    {\r\n        return state;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default reducer;\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\boardReducer.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\boardIdReducer.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\postIdReducer.js",[],[],"C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\reducers\\postReducer.js",["124","125","126","127","128","129"],[],"const reducer =(state=[\r\n\r\n],action)=>{\r\n\r\nif(action.type==='addPost')\r\n{\r\n    return state.concat(action.payload)\r\n}\r\nelse if(action.type==='addLike')\r\n{\r\n    let s=state;\r\n\r\n    s.forEach((item) =>{\r\n        if(item.Id==action.payload)\r\n        {\r\n            if(item.liked==0)\r\n            {\r\n                item.liked=1;\r\n            }\r\n            else\r\n            {\r\n                item.liked=0;\r\n            }\r\n            return s;\r\n            \r\n        }\r\n    })\r\n    return s\r\n}\r\nelse if(action.type=='delPost')\r\n{\r\n    let myState=[];\r\n    state.forEach((item) =>{\r\n        \r\n        if(item.postId!=action.payload)\r\n        {\r\n            myState.push(item);\r\n        }\r\n    });\r\n    return myState\r\n}\r\nelse if(action.type=='editPost')\r\n{\r\n    state.forEach((item) =>{\r\n        \r\n        if(item.postId==action.payload.postId)\r\n        {\r\n            item.postTitle=action.payload.postTitle;\r\n            item.postDesc=action.payload.postDesc;\r\n            item.image  =action.payload.image;\r\n        }\r\n    });\r\n    return state;\r\n}\r\nelse\r\n{\r\n    return state;\r\n}\r\n\r\n}\r\n\r\nexport default reducer;\r\n","C:\\Users\\DEEKSHA BHATNAGAR\\Desktop\\VS CODE\\React Learning\\myapp\\src\\state\\action-creators\\index.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":1,"column":8,"nodeType":"132","messageId":"133","endLine":1,"endColumn":12},{"ruleId":"130","severity":1,"message":"134","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"135","line":19,"column":11,"nodeType":"132","messageId":"133","endLine":19,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":56,"column":30,"nodeType":"138","messageId":"139","endLine":56,"endColumn":32},{"ruleId":"136","severity":1,"message":"137","line":111,"column":34,"nodeType":"138","messageId":"139","endLine":111,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":122,"column":7,"nodeType":"142","endLine":122,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":129,"column":34,"nodeType":"138","messageId":"139","endLine":129,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":30,"column":11,"nodeType":"145","messageId":"139","endLine":30,"endColumn":13},{"ruleId":"130","severity":1,"message":"146","line":16,"column":9,"nodeType":"132","messageId":"133","endLine":16,"endColumn":13},{"ruleId":"130","severity":1,"message":"147","line":22,"column":18,"nodeType":"132","messageId":"133","endLine":22,"endColumn":29},{"ruleId":"130","severity":1,"message":"148","line":15,"column":18,"nodeType":"132","messageId":"133","endLine":15,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":18,"column":26,"nodeType":"138","messageId":"139","endLine":18,"endColumn":28},{"ruleId":"143","severity":1,"message":"144","line":41,"column":11,"nodeType":"145","messageId":"139","endLine":41,"endColumn":13},{"ruleId":"130","severity":1,"message":"134","line":3,"column":10,"nodeType":"132","messageId":"133","endLine":3,"endColumn":21},{"ruleId":"130","severity":1,"message":"149","line":15,"column":10,"nodeType":"132","messageId":"133","endLine":15,"endColumn":18},{"ruleId":"150","severity":1,"message":"151","line":28,"column":5,"nodeType":"142","endLine":28,"endColumn":70},{"ruleId":"136","severity":1,"message":"137","line":37,"column":29,"nodeType":"138","messageId":"139","endLine":37,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":5,"column":13,"nodeType":"138","messageId":"139","endLine":5,"endColumn":15},{"ruleId":"136","severity":1,"message":"137","line":14,"column":19,"nodeType":"138","messageId":"139","endLine":14,"endColumn":21},{"ruleId":"136","severity":1,"message":"137","line":16,"column":26,"nodeType":"138","messageId":"139","endLine":16,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":30,"column":20,"nodeType":"138","messageId":"139","endLine":30,"endColumn":22},{"ruleId":"136","severity":1,"message":"152","line":35,"column":23,"nodeType":"138","messageId":"139","endLine":35,"endColumn":25},{"ruleId":"136","severity":1,"message":"137","line":42,"column":20,"nodeType":"138","messageId":"139","endLine":42,"endColumn":22},{"ruleId":"136","severity":1,"message":"137","line":46,"column":23,"nodeType":"138","messageId":"139","endLine":46,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'board' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'post' is assigned a value but never used.","'setPostDesc' is assigned a value but never used.","'setBoard' is assigned a value but never used.","'editPost' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","Expected '!==' and instead saw '!='."]